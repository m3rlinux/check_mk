#!/usr/bin/env python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

# Check_MK Cloudmark Info Plugin
#
# Copyright 2019, Davide Gibilisco <m3rlinux.it@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#
# Example Agent Output:
# <<<cloudmark>>>
# Queue 82
# Delivery 13056
# Concurrency 2680
#
# Put your username and password into cloudmark.cfg in MK_CONFDIR
# format: username:password

import os
import json
import urllib2
import base64
import sys

MK_CONFDIR = os.getenv("MK_CONFDIR") or "/etc/check_mk"
config_file = 'cloudmark.cfg'
queue_url = 'https://localhost:8080/stats/Queues/Global/Queued?samples=1&increment=86400'
delivery_url = 'https://localhost:8080/stats/Messages/Email/MsgSentRecipients/?samples=1&increment=86400'

try:
    f = open(os.path.join(MK_CONFDIR, config_file), 'r')
    credentials = f.read()
    f.close()
except IOError:
    print "\nUnable to find configuration file, please create %s in %s\n" % (config_file, MK_CONFDIR)
    print "\tExample (single row): username:password\n"
    sys.exit(1)

userPasswd = tuple(credentials.strip('\n').split(":"))
base64string = base64.standard_b64encode("%s" % userPasswd)

print "<<<cloudmark>>>"
modes = ["Queue", "Delivery", "Concurrency"]
for mode in modes:
    if mode == "Queue":
        request = urllib2.Request(queue_url)
        request.add_header("Authorization", "Basic %s" % base64string)
        response = urllib2.urlopen(request)
        data = json.load(response)
        value = data['data']['Queues']['Global']['Queued']['values'][0]
    elif mode == "Delivery":
        request = urllib2.Request(delivery_url)
        request.add_header("Authorization", "Basic %s" % base64string)
        response = urllib2.urlopen(request)
        data = json.load(response)
        value = data['data']['Messages']['Email']['MsgSentRecipients']['values'][0]
    elif mode == "Concurrency":
        data = os.popen("netstat -antp | grep ':25' | grep -v LISTEN | wc -l")
        value = data.read()
    print "%s %s" % (mode, value)
